# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/hubspot-ruby/all/hubspot-ruby.rbi
#
# hubspot-ruby-0.6.1
module Hubspot
  def self.configure(config = nil); end
end
class Hubspot::RequestError < StandardError
  def initialize(response, message = nil); end
  def response; end
  def response=(arg0); end
end
class Hubspot::ConfigurationError < StandardError
end
class Hubspot::MissingInterpolation < StandardError
end
class Hubspot::ContactExistsError < Hubspot::RequestError
end
class Hubspot::InvalidParams < StandardError
end
class Hubspot::ApiError < StandardError
end
class Hubspot::Properties
  def self.add_default_parameters(opts = nil); end
  def self.all(path, opts = nil, filter = nil); end
  def self.check_field_type(val); end
  def self.check_type(val); end
  def self.create!(path, params = nil); end
  def self.create_group!(path, params = nil); end
  def self.delete!(path, property_name); end
  def self.delete_group!(path, group_name); end
  def self.filter_results(results, key, include, exclude); end
  def self.groups(path, opts = nil, filter = nil); end
  def self.same?(src, dst); end
  def self.update!(path, property_name, params = nil); end
  def self.update_group!(path, group_name, params = nil); end
  def self.valid_group_params(params); end
  def self.valid_option_params(options); end
  def self.valid_params(params = nil); end
  def self.valid_property_params(params); end
end
class Hubspot::Company
  def [](property); end
  def add_contact(contact_or_vid); end
  def contacts; end
  def destroy!; end
  def destroyed?; end
  def get_contact_vids; end
  def initialize(response_hash); end
  def name; end
  def properties; end
  def self.add_contact!(company_vid, contact_vid); end
  def self.all(opts = nil); end
  def self.all_with_offset(opts = nil); end
  def self.batch_update!(companies); end
  def self.create!(name, params = nil); end
  def self.find_by_domain(domain, options = nil); end
  def self.find_by_id(id); end
  def update!(params); end
  def vid; end
end
class Hubspot::CompanyProperties < Hubspot::Properties
  def self.add_default_parameters(opts = nil); end
  def self.all(opts = nil, filter = nil); end
  def self.create!(params = nil); end
  def self.create_group!(params = nil); end
  def self.delete!(property_name); end
  def self.delete_group!(group_name); end
  def self.groups(opts = nil, filter = nil); end
  def self.same?(src, dst); end
  def self.update!(property_name, params = nil); end
  def self.update_group!(group_name, params = nil); end
  def self.valid_params(params); end
end
class Hubspot::Connection
  def self.converted_value(value); end
  def self.default_cookies; end
  def self.default_cookies=(arg0); end
  def self.default_options; end
  def self.default_options=(arg0); end
  def self.delete_json(path, opts); end
  def self.generate_url(path, params = nil, options = nil); end
  def self.get_json(path, opts); end
  def self.log_request_and_response(uri, response, body = nil); end
  def self.param_string(key, value); end
  def self.post_json(path, opts); end
  def self.put_json(path, opts); end
  extend HTTParty::ClassMethods
  extend HTTParty::ModuleInheritableAttributes::ClassMethods
  include HTTParty
  include HTTParty::ModuleInheritableAttributes
end
class Hubspot::FormsConnection < Hubspot::Connection
  def self.default_cookies; end
  def self.default_options; end
  def self.submit(path, opts); end
end
class Hubspot::Config
  def self.access_token; end
  def self.access_token=(arg0); end
  def self.base_url; end
  def self.base_url=(arg0); end
  def self.client_id; end
  def self.client_id=(arg0); end
  def self.client_secret; end
  def self.client_secret=(arg0); end
  def self.configure(config); end
  def self.ensure!(*params); end
  def self.hapikey; end
  def self.hapikey=(arg0); end
  def self.logger; end
  def self.logger=(arg0); end
  def self.portal_id; end
  def self.portal_id=(arg0); end
  def self.redirect_uri; end
  def self.redirect_uri=(arg0); end
  def self.reset!; end
end
class Hubspot::Contact
  def [](property); end
  def destroy!; end
  def destroyed?; end
  def email; end
  def initialize(response_hash); end
  def is_contact; end
  def is_new; end
  def is_new=(val); end
  def list_memberships; end
  def properties; end
  def self.all(opts = nil); end
  def self.create!(email, params = nil); end
  def self.createOrUpdate(email, params = nil); end
  def self.create_or_update!(contacts); end
  def self.find_by_email(emails); end
  def self.find_by_id(vids); end
  def self.find_by_utk(utks); end
  def self.merge!(primary_contact_vid, secondary_contact_vid); end
  def self.search(query, options = nil); end
  def update!(params); end
  def utk; end
  def vid; end
end
class Hubspot::ContactProperties < Hubspot::Properties
  def self.add_default_parameters(opts = nil); end
  def self.all(opts = nil, filter = nil); end
  def self.create!(params = nil); end
  def self.create_group!(params = nil); end
  def self.delete!(property_name); end
  def self.delete_group!(group_name); end
  def self.groups(opts = nil, filter = nil); end
  def self.same?(src, dst); end
  def self.update!(property_name, params = nil); end
  def self.update_group!(group_name, params = nil); end
  def self.valid_params(params); end
end
class Hubspot::ContactList
  def add(contacts); end
  def assign_properties(hash); end
  def contacts(opts = nil); end
  def destroy!; end
  def destroyed?; end
  def dynamic; end
  def id; end
  def initialize(hash); end
  def name; end
  def portal_id; end
  def properties; end
  def refresh; end
  def remove(contacts); end
  def self.all(opts = nil); end
  def self.create!(opts = nil); end
  def self.find(ids); end
  def update!(opts = nil); end
end
class Hubspot::Form
  def assign_properties(hash); end
  def destroy!; end
  def destroyed?; end
  def fields(opts = nil); end
  def guid; end
  def initialize(hash); end
  def properties; end
  def self.all; end
  def self.create!(opts = nil); end
  def self.find(guid); end
  def submit(opts = nil); end
  def update!(opts = nil); end
end
class Hubspot::Blog
  def [](property); end
  def initialize(response_hash); end
  def posts(params = nil); end
  def properties; end
  def self.find_by_id(id); end
  def self.list; end
end
class Hubspot::BlogPost
  def [](property); end
  def created_at; end
  def initialize(response_hash); end
  def self.find_by_blog_post_id(id); end
  def topics; end
end
class Hubspot::Topic
  def [](property); end
  def initialize(response_hash); end
  def properties; end
  def self.find_by_topic_id(id); end
  def self.list; end
end
class Hubspot::Utils
  def self.compare_property_lists(klass, source, target); end
  def self.create_groups(klass, groups, dry_run = nil); end
  def self.create_properties(klass, props, dry_run = nil); end
  def self.dump_properties(klass, hapikey = nil, filter = nil); end
  def self.find_by_name(name, set); end
  def self.hash_to_properties(hash, opts = nil); end
  def self.properties_to_hash(props); end
  def self.restore_properties(klass, hapikey = nil, properties = nil, dry_run = nil); end
  def self.update_properties(klass, props, dry_run = nil); end
  def self.with_hapikey(hapikey); end
end
class Hubspot::Deal
  def [](property); end
  def company_ids; end
  def deal_id; end
  def destroy!; end
  def destroyed?; end
  def initialize(response_hash); end
  def portal_id; end
  def properties; end
  def self.all(opts = nil); end
  def self.associate!(deal_id, company_ids = nil, vids = nil); end
  def self.create!(portal_id, company_ids, vids, params = nil); end
  def self.find(deal_id); end
  def self.find_by_association(object); end
  def self.find_by_company(company); end
  def self.find_by_contact(contact); end
  def self.recent(opts = nil); end
  def update!(params); end
  def vids; end
end
class Hubspot::DealPipeline
  def [](stage); end
  def active; end
  def destroy!; end
  def display_order; end
  def initialize(response_hash); end
  def label; end
  def pipeline_id; end
  def self.all; end
  def self.create!(post_data = nil); end
  def self.find(pipeline_id); end
  def stages; end
end
class Hubspot::DealProperties < Hubspot::Properties
  def self.add_default_parameters(opts = nil); end
  def self.all(opts = nil, filter = nil); end
  def self.create!(params = nil); end
  def self.create_group!(params = nil); end
  def self.delete!(property_name); end
  def self.delete_group!(group_name); end
  def self.groups(opts = nil, filter = nil); end
  def self.same?(src, dst); end
  def self.update!(property_name, params = nil); end
  def self.update_group!(group_name, params = nil); end
  def self.valid_params(params); end
end
class Hubspot::Deprecator
  def self.build(version: nil); end
end
class Hubspot::Owner
  def [](property); end
  def email; end
  def initialize(property_hash); end
  def owner_id; end
  def properties; end
  def self.all(include_inactive = nil); end
  def self.find_by_email(email, include_inactive = nil); end
  def self.find_by_emails(emails, include_inactive = nil); end
end
class Hubspot::Engagement
  def [](property); end
  def associations; end
  def attachments; end
  def destroy!; end
  def destroyed?; end
  def engagement; end
  def id; end
  def initialize(response_hash); end
  def metadata; end
  def self.associate!(engagement_id, object_type, object_vid); end
  def self.create!(params = nil); end
  def self.find(engagement_id); end
  def self.find_by_association(association_id, association_type); end
  def self.find_by_company(company_id); end
  def self.find_by_contact(contact_id); end
  def update!(params); end
end
class Hubspot::EngagementNote < Hubspot::Engagement
  def body; end
  def contact_ids; end
  def self.create!(contact_id, note_body, owner_id = nil, deal_id = nil); end
end
class Hubspot::EngagementCall < Hubspot::Engagement
  def body; end
  def company_ids; end
  def contact_ids; end
  def deal_ids; end
  def self.create!(contact_vid, body, duration, owner_id = nil, deal_id = nil, status = nil, time = nil); end
end
class Hubspot::Subscription
  def bounced; end
  def initialize(response_hash); end
  def marked_as_spam; end
  def self.status(email); end
  def status; end
  def subscribed; end
  def subscription_statuses; end
end
class Hubspot::OAuth < Hubspot::Connection
  def self.authorize_url(scopes, params = nil); end
  def self.create(code, params = nil, options = nil); end
  def self.default_cookies; end
  def self.default_cookies=(arg0); end
  def self.default_options; end
  def self.default_options=(arg0); end
  def self.oauth_post(url, params, options = nil); end
  def self.refresh(token, params = nil, options = nil); end
  def self.token_url; end
  extend HTTParty::ClassMethods
  extend HTTParty::ModuleInheritableAttributes::ClassMethods
  include HTTParty
  include HTTParty::ModuleInheritableAttributes
end
